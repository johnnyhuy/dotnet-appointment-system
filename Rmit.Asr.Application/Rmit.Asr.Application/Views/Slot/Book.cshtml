@using Rmit.Asr.Application.Models
@model Rmit.Asr.Application.Models.ViewModels.BookSlot

@{
    ViewData["Title"] = "Make Booking";
}

<h1 class="pb-2">@ViewData["Title"]</h1>
<div class="row">
    <div class="col-md-4">
        <form asp-action="Book">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="RoomId"></label>
                <p class="mb-0">
                    <span asp-validation-for="RoomId" class="text-danger"></span>
                </p>
                <select asp-for="RoomId" class="form-control">
                    @foreach (Room room in Model.Rooms)
                    {
                        <option value="@room.RoomId">@room.RoomId.ToUpper()</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label asp-for="StartTime"></label>
                <p class="mb-0">
                    <span asp-validation-for="StartTime" class="text-danger"></span>
                </p>
                <input asp-for="StartTime" id="dateTimePicker" class="form-control" type="text" placeholder="Select Date.." data-id="datetime"/>
            </div>
            <div class="form-group">
                <input type="submit" value="Book" class="btn btn-primary" />
                <a class="btn" asp-controller="Slot" asp-action="Index">Slot list</a>
            </div>
        </form>
    </div>
    <div class="col-md-8">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th class="vertical-middle">
                        @Html.DisplayNameFor(model => model.RoomId)
                    </th>
                    <th class="vertical-middle">
                        Start Date
                    </th>
                    <th class="vertical-middle">
                        Start Time
                    </th>
                    <th class="vertical-middle">
                        @Html.DisplayNameFor(model => model.Staff.StaffId)
                    </th>
                    <th class="vertical-middle">
                        @Html.DisplayNameFor(model => model.Student.StudentId)
                    </th>
                </tr>
            </thead>
            <tbody>
            @foreach (Slot slot in Model.Slots)
            {
                <tr>
                    <td class="vertical-middle">
                        @Html.DisplayFor(modelItem => slot.RoomId)
                    </td>
                    <td class="vertical-middle">
                        @slot.StartTime?.ToString("dddd, dd MMMM yyyy")
                    </td>
                    <td class="vertical-middle">
                        @slot.StartTime?.ToString("h:mm tt")
                    </td>
                    <td class="vertical-middle">
                        @Html.DisplayFor(modelItem => slot.Staff.StaffId)
                    </td>
                    <td class="vertical-middle">
                        @Html.DisplayFor(modelItem => slot.Student.StudentId)
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}