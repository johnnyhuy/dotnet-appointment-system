@using Rmit.Asr.Application.Models
@model Rmit.Asr.Application.Models.ViewModels.CreateSlot;
@{
    ViewData["Title"] = "Create Slot";
}

<h2 class="pb-4">Create a Slot</h2>
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="RoomId"></label>
                <span asp-validation-for="RoomId" class="text-danger"></span>
                <select asp-for="RoomId" class="form-control">
                @foreach (Room room in Model.Rooms)
                {
                    <option value="@room.RoomId">@room.RoomId.ToUpper()</option>
                }
                </select>
            </div>
            <div class="form-group">
                <label asp-for="StartTime"></label>
                <span asp-validation-for="StartTime" class="text-danger"></span>
                <input asp-for="StartTime" id="dateTimePicker" class="form-control" type="text" placeholder="Select Date.." data-id="datetime"/>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary"/>
                <a class="btn" asp-controller="Slot" asp-action="StaffIndex">Back to list</a>
            </div>
        </form>
    </div>
    <div class="col-md-8">
    @if (Model.Slots.Any())
    {
        <table class="table table-striped">
            <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.RoomId)
                </th>
                <th>
                    Start Date
                </th>
                <th>
                    Start Time
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Staff.StaffId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Student.StudentId)
                </th>
            </tr>
            </thead>
            <tbody>
            @foreach (Slot item in Model.Slots)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.RoomId)
                    </td>
                    <td>
                        @item.StartTime?.ToString("dddd, dd MMMM yyyy")
                    </td>
                    <td>
                        @item.StartTime?.ToString("h:mm tt")
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Staff.StaffId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Student.StudentId)
                    </td>
                </tr>
            }
            </tbody>
        </table>
    }
    </div>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}